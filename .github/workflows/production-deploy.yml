name: Deploy Knowledge Base to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy-to-server:
    runs-on: ubuntu-latest
    name: 🚀 Deploy to Production Server
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔍 Validate HTML files
      run: |
        echo "🔍 Validating HTML structure..."
        total_files=$(find . -name "*.html" -not -path "./.git/*" | wc -l)
        echo "Found $total_files HTML files to validate"
        
        # Basic validation
        for file in $(find . -name "*.html" -not -path "./.git/*"); do
          if ! grep -q "<!DOCTYPE html>" "$file"; then
            echo "⚠️  Missing DOCTYPE in: $file"
          fi
        done
        
    - name: 🔒 Security scan
      run: |
        echo "🔒 Scanning for security issues..."
        if grep -r "password\|secret\|api.*key" --include="*.html" --include="*.js" --include="*.css" . | grep -v "example\|demo\|placeholder"; then
          echo "⚠️  Potential sensitive data found - review before deploy"
          exit 1
        fi
        echo "✅ Security scan passed"
        
    - name: 🚀 Deploy to production server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          set -e
          echo "🚀 Starting deployment to knowledge base..."
          
          # Navigate to knowledge base directory
          cd /var/www/zaylegend/apps/knowledge-base
          
          # Backup current version
          sudo cp -r . ../knowledge-base-backup-$(date +%Y%m%d-%H%M%S) || echo "Backup creation failed, continuing..."
          
          # Fetch and pull latest changes
          echo "📥 Fetching latest changes from GitHub..."
          git fetch origin main
          git reset --hard origin/main
          
          # Ensure correct permissions
          echo "🔧 Setting correct permissions..."
          sudo chown -R langchain:www-data .
          find . -type f -name "*.html" -exec chmod 644 {} \;
          find . -type f -name "*.css" -exec chmod 644 {} \;
          find . -type f -name "*.js" -exec chmod 644 {} \;
          find . -type d -exec chmod 755 {} \;
          
          # Test nginx configuration
          echo "🔍 Testing nginx configuration..."
          sudo nginx -t
          
          # Reload nginx to ensure changes take effect
          echo "🔄 Reloading nginx..."
          sudo systemctl reload nginx
          
          echo "✅ Knowledge base deployment completed successfully!"
          echo "🌐 Live at: https://zaylegend.com/knowledge-base/"
          
    - name: 🎯 Deployment summary
      run: |
        echo "📊 Deployment Summary"
        echo "===================="
        echo "🎯 Repository: knowledge-base"
        echo "🌍 Environment: Production"
        echo "📅 Deployed at: $(date)"
        echo "🔗 Live URL: https://zaylegend.com/knowledge-base/"
        echo "✅ Status: Success"

  update-portfolio-submodule:
    needs: deploy-to-server
    runs-on: ubuntu-latest
    name: 📦 Update Portfolio Submodule
    
    steps:
    - name: 🔄 Update portfolio submodule
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          echo "📦 Updating portfolio submodule..."
          cd /var/www/zaylegend/portfolio
          
          # Update the submodule to point to latest main
          git submodule update --remote apps/knowledge-base
          git add apps/knowledge-base
          
          # Only commit if there are changes
          if ! git diff --cached --quiet; then
            git commit -m "🤖 Auto-update knowledge-base submodule from main branch

            Updated knowledge-base submodule to latest main branch.
            This ensures portfolio repo stays in sync with knowledge base updates.
            
            🤖 Generated with [GitHub Actions]"
            
            echo "✅ Portfolio submodule updated successfully"
          else
            echo "ℹ️  No submodule changes to commit"
          fi